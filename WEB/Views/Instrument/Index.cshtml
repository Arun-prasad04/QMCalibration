@{
	ViewData["Title"] = "Instrument List";
}
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<script src="~/js/3.3.1Version/jquery.min.js"></script>
<style>
	/* .OverDue tr:nth-child(odd), tr:nth-child(even) {
			background-color: lightsalmon;
				tomato
		} */
	/* .table-striped tr:nth-child(even) {
			background-color: #e8e7e6;
		}

		th:nth-child(even), td:nth-child(even) */
</style>

<section class="content">
	<div class="row">
		<div class="col-12">

			<div class="card card-primary">
				<div class="card-header">
					<div class="row">
						<div class="col-md-6">
							<h3 class="card-title trn">Instruments List</h3>
						</div>
						<div class="col-md-6 text-right">
							<a href='@Url.Action("Create","Instrument")'>
								<input type="button" class="btn btn-sm btn-default trn" value="Add New Instrument">
							</a>
							<a href='@Url.Action("QuratineList","Instrument")'>
								<input type="button" class="btn btn-sm btn-default trn" value="Quratine List">
							</a>
						</div>

					</div>
				</div>

				<div class="col-sm-3">
					<!-- text input -->
					<div class="form-group">

						@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "1")
						{
							<label class="trn">Due For Calibration</label>
							@* <input type="checkbox" id="selectAll" value="selectAll" /> *@
							<input type="checkbox" name="DueTracker" id="checkdueonly" value="Due For Calibration" onclick="DueForCalibrationInstruments();">
						}
					</div>
				</div>

				<!-- /.card-header -->
				<div class="card-body">
					<table id="example1" class="table table-bordered table-striped" style="width:100%">
						<thead>
							<tr>
								<th class="trn">Instrument Name</th>
								<th class="trn">Serial Number</th>
								<th class="trn">Lab ID Number</th>
								<th class="trn">Range</th>
								<th class="trn">Department</th>
								<th class="trn">Sub section code</th>
								<th class="trn">Scope</th>
								<th class="trn">Calibration Date</th>
								<th class="DueDate trn">DueDate</th>
								<th class="trn">Edit</th>
								<th class="trn">Control Card</th>
								<!--<th>Delete</th>-->
								@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "1")
								{
									@*<th class="trn">Request</th>*@
									@* <input id="instrumentId" name="instrumentId" type="checkbox" value=' + item.id + ' checked="checked" /> *@
									<th style="text-align:center;">
										<span class="trn">SelectAll Request</span>
										<br>
										<input type="checkbox" id="selectAll" name="selectAll" />
									</th>

								}
								<th class="trn">Quarantine</th>
							</tr>
						</thead>
						<tbody>

							@foreach (var item in Model)
							{
								@if ((@item.RequestStatus != 28 && @item.ToolInventoryStatus != 2) || (@item.RequestStatus != 30 && @item.ToolInventoryStatus != 2) || (@item.RequestStatus != 31 && @item.ToolInventoryStatus != 2))
								{

									<tr>
										@* <td style="display:none;">@item.ReqDueDate</td> *@
										<td class="one">@item.InstrumentName</td>
										<td>@item.SlNo</td>
										<td>@item.IdNo</td>
										<td>@item.Range</td>
										<td>@item.DepartmentName</td>
										<td>@item.SubSecCode</td>
										<td>@item.TypeOfEquipment</td>
										<td>@item.CalibDate.ToString("dd-MM-yyyy")</td>
										@if (item.DueDate == null)
										{
											<td> </td>
										}
										else
										{
											<td>@item.DueDate.ToString("dd-MM-yyyy")</td>
										}
										<td><a href='@Url.Action("InstrumentEdit","Instrument",new {instrumentId=@item.Id})'><i class="fas fa-edit"></i></a></td>
										<td><a href='@Url.Action("ControlCard","Instrument",new {instrumentId=@item.Id})'><i class="fas fa-id-badge"></i></a></td>
										@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "1")
										{
											<td style="text-align:center;" class="chkpl">
												@if (@item.DueDate != null)
												{
													@if (DateTime.Now.Month == @item.DueDate.Month && DateTime.Now.Year == @item.DueDate.Year)
													{
														//@if ((@item.RequestStatus != 26 && @item.RequestStatus != 29 && @item.RequestStatus != 27))// || @item.RequestStatus == 0)
														@if (@item.RequestStatus == 30 || @item.RequestStatus == 31 || @item.RequestStatus == 28)
														{
															<input id="chkBox" name="chkBox" class="class1" type="checkbox" value='@item.Id' />
															<input id="typeId" name="typeId" type="hidden" value="2" />
															<input id="RequestId" name="RequestId" class="clsRequestId" type="hidden" value='@item.RequestId' />
															<input id="DueDate" name="DueDate" class="clsDueDate" type="hidden" value='@item.DueDate' />
															<input id="ReplacementStartDate" name="ReplacementStartDate" class="clsReplacementStartDate" type="hidden" value='@item.ReplacementStartDate' />
															<input id="ReqDueDate" name="ReqDueDate" class="clsReqDueDate" type="hidden" value='@item.ReqDueDate' />
														}

													}
													else if ((@item.DueDate.Month < DateTime.Now.Month && DateTime.Now.Year >= @item.DueDate.Year ) && (@item.RequestStatus == 30 || @item.RequestStatus == 31 || @item.RequestStatus == 28))
													{
														//@if (@item.RequestStatus == 30 || @item.RequestStatus == 31 || @item.RequestStatus == 28)
														//{

															<input id="chkBox" name="chkBox" class="class1" type="checkbox" value='@item.Id' />
														<input id="typeId" name="typeId" type="hidden" value="2" />
														// to implement only regular cases for Dept User Listing above typeid=3 converted to typeid-->2-07-12-223
														<input id="RequestId" name="RequestId" class="clsRequestId" type="hidden" value='@item.RequestId' />
															<input id="DueDate" name="DueDate" class="clsDueDate" type="hidden" value='@item.DueDate' />
															<input id="ReplacementStartDate" name="ReplacementStartDate" class="clsReplacementStartDate" type="hidden" value='@item.ReplacementStartDate' />
															<input id="ReqDueDate" name="ReqDueDate" class="clsReqDueDate" type="hidden" value='@item.ReqDueDate' />
															
													}
													else if ((@item.DueDate.Month == DateTime.Now.AddMonths(1).Month && DateTime.Now.Year + 1 == @item.DueDate.Year) && (@item.RequestStatus == 30 || @item.RequestStatus == 31 || @item.RequestStatus == 28))
													{
													//@if (@item.RequestStatus == 30 || @item.RequestStatus == 31 || @item.RequestStatus == 28)
														//{

														<input id="chkBox" name="chkBox" class="class1" type="checkbox" value='@item.Id' />
														<input id="typeId" name="typeId" type="hidden" value="2" />
														<input id="RequestId" name="RequestId" class="clsRequestId" type="hidden" value='@item.RequestId' />
														<input id="DueDate" name="DueDate" class="clsDueDate" type="hidden" value='@item.DueDate' />
														<input id="ReplacementStartDate" name="ReplacementStartDate" class="clsReplacementStartDate" type="hidden" value='@item.ReplacementStartDate' />
														<input id="ReqDueDate" name="ReqDueDate" class="clsReqDueDate" type="hidden" value='@item.ReqDueDate' />

													}
													else
													{
														@* <input id="DueDate" name="DueDate" class="clsDueDate" type="hidden" value='@item.DueDate' />
									<input id="ReplacementStartDate" name="ReplacementStartDate" class="clsReplacementStartDate" type="hidden" value='@item.ReplacementStartDate' /> *@
													}
												}
											</td>
										}
										@* far fa-id-card *@

										@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2" || @HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "3")
										{
											<td><i class="fas fa-arrow-alt-circle-right" style="cursor:pointer;" id='@item.Id' onclick="InstrumentQuarantineClick(this, language)"></i></td>
										}
										else
										{
											<td></td>
										}
										
									</tr>

								}
							}
						</tbody>
					</table>
				</div>

				@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "1")
				{
					<div class="form-group" style="text-align:right;">
						<input style="margin-top: 32px;" type="button" class="btn btn-primary trn" name="btnSubmit" id="btnSubmit" value="Submit"
							   onclick="InsertRequestList();">
						<a href='@Url.Action("Request","Tracker")'> <input type="button" style="margin-top: 32px;" class="btn btn-default trn" value="Cancel"></a>
					</div>
				}
				<!-- /.card-body -->
			</div>
			<!-- /.card -->
		</div>
		<!-- /.col -->
	</div>
	<!-- /.row -->
</section>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script>


	$(document).ready(function () 
	 {
	
		// var currentdate = new Date();
		// console.log(currentdate);
		// $('#example1 tbody tr').each(function (row, tr) {
		// 	console.log($(this).closest('tr').find('.clsReqDueDate').val());
		// 	var redate = new Date($(this).closest('tr').find('.clsReqDueDate').val());
		// 		if (redate < currentdate) 
		// 		{
		// 			alert("test");
		// 		//$(this).closest('tr').css('background-color', '#fbefef');
		// 		$(row).css('background-color', '#fbefef');
		// 		}
		// 		});

	
		// $('#example1').dataTable({
		// 	"createdRow": function (row, data, dataIndex) {
				
		// 		console.log("data");
		// 		//console.log(data);
		// 		console.log(data[8]);
		// 		var edate =data[8];
		// 		//var currentdate = moment(new Date()).format("DD-MM-YYYY");
		// 		var currentdate = new Date()
		// 		var redate = new Date(edate);
		// 		console.log("currentdate");
		// 		console.log(currentdate);
		// 		console.log("redate");
		// 		console.log(redate);
		// 		if ((redate < currentdate) )//&& (item.status != 30))
		// 		{
		// 			//alert("");
		// 			$(row).css('background-color', '#fbefef');
		// 		}
		// 	}
		// });
	});
	
	$(function () {
		
		var oTable = $('#example1').dataTable({
			stateSave: true,
			"pageLength": 100,			
			'columnDefs': [{
				'targets': [9], /* column index */
				'orderable': false, /* true or false */
			}],
			dom: "<'row'<'col-sm-3'l><'col-sm-3'f><'col-sm-6'p>>" +
				"<'row'<'col-sm-12'tr>>" +
				"<'row'<'col-sm-5'i><'col-sm-7'p>>",
		});

		var allPages = oTable.fnGetNodes();

		$('body').on('click', '#selectAll', function () {
			if ($(this).hasClass('allChecked')) {
				$('input[type="checkbox"]', allPages).prop('checked', false);
			} else {
				$('input[type="checkbox"]', allPages).prop('checked', true);
			}
			$(this).toggleClass('allChecked');
		})

		//$('td.ReqDueDate[value=Zero]').closest('tr').css('background-color', 'red');
	});
		//function GetAllInstrument(){
			//	$('#dvload').show();

			//	$.ajax({
			//	type: 'GET',
			//		url: '../Instrument/GetAllInstrumentList',
			//		dataType: 'json',
			//		success: function (data) {
			//			$('#example1 tbody').empty();
			//			console.log(data);
			//			if (data.length>0){
			//			$.each(data, function (i, item) {
			//				//console.log(item.dueDate);
			//				var date = new Date(item.dueDate)
			//				//console.log(date);
			//				month = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1),
			//					yr = date.getFullYear(),
			//					console.log(yr);

			//				var tdRequest = '';
			//				var d = new Date($.now());
			//				if (item.userRoleId == 1) {
			//					if (item.dueDate != null) {
			//						//if ((d.getMonth() + 1) == item.dueDate.Month && d.getFullYear() == item.dueDate.Year) {
			//						if ((d.getMonth() + 1) == month && d.getFullYear() == yr) {
			//							if ((item.requestStatus != 26 && item.requestStatus != 29 && item.requestStatus != 27) || item.requestStatus == 0) {


			//								//tdRequest = "<td style='text - align: center;'> <a href = '@Url.Action("Request","Instrument")?instrumentId=" + item.id + "&typeId=2' > <i class='fas fa-arrow-alt-circle-right' > </i></a > </td>"
			//								//< a href = 'Url.Action("Request","Instrument",new {instumentId=item.Id,typeId=2})' > <i class="fas fa-arrow-alt-circle-right" > </i></a > </td>"

			//									tdRequest = '<td style="text-align:center;">' +

			//										'<input id="chkBox" name="chkBox" class="chkBox" type="checkbox" value=' + item.id + ' />' +
			//										'<input id="typeId" name="typeId" type="hidden" value="2" />' +
			//										'<input id="requestId" name="typeId" type="hidden" value=' + item.requestId + ' />' +
			//										'</td>'

			//								}

			//						}
			//						//else if (item.dueDate.Month < (d.getMonth() + 1) && d.getFullYear() >= item.dueDate.Year) {
			//						else if (month < (d.getMonth() + 1) && d.getFullYear() >= yr)
			//						{
			//							if ((item.requestStatus != 26 && item.requestStatus != 29 && item.requestStatus != 27) || item.requestStatus == 0) {
			//								//tdRequest = "<td style='text - align: center;'> <a href = '@Url.Action("Request","Instrument")?instrumentId=" + item.id + "&typeId=3' > <i class='fas fa-arrow-alt-circle-right' > </i></a > </td>"
			//								//<a href='Url.Action("Request","Instrument",new {instumentId=item.Id,typeId=3})' > <i class="fas fa-arrow-alt-circle-right" > </i></a > </td>"

			//									tdRequest = '<td style="text-align:center;">' +
			//										'<input id="chkBox" name="chkBox" class="chkBox" type="checkbox" value=' + item.id + ' />' +
			//										'<input id="typeId" name="typeId" type="hidden" value="3" />' +
			//										'<input id="requestId" name="typeId" type="hidden" value=' + item.requestId + ' />' +
			//										'</td>'


			//								}

			//						}
			//						else {
			//							tdRequest = "<td> </td>"
			//						}
			//					}
			//					else {
			//						tdRequest = "<td></td>"
			//					}

			//				}

			//				var tdQuarantine = '';
			//				if (item.userRoleId == 2) {
			//					tdQuarantine = '<td><i class="fas fa-arrow-alt-circle-right" style = "cursor:pointer; background-position:center" id='+item.id+' onclick = "InstrumentQuarantineClick(this, language)" ></i></td>'
			//				}
			//				else {
			//					tdQuarantine = "<td> </td>"
			//				}
			//				console.log("tdRequest");
			//				console.log(tdRequest);
			//				var calibDate = moment(item.calibDate).format("DD-MM-YYYY");
			//				var dueDate = moment(item.dueDate).format("DD-MM-YYYY");

			//					var rows = "<tr>"
			//						+ "<td>" + item.instrumentName + "</td>"
			//						+ "<td>" + item.slNo + "</td>"
			//						+ "<td>" + item.idNo + "</td>"
			//						+ "<td>" + item.range + "</td>"
			//						+ "<td>" + item.departmentName + "</td>"
			//						+ "<td>" + item.typeOfEquipment + "</td>"
			//						+ "<td>" + calibDate + "</td>"
			//						+ "<td>" + dueDate + "</td>"
			//						+ "<td style='text-align: center;'><a href='@Url.Action("InstrumentEdit","Instrument")?instrumentId=" + item.id + "'><i class='fas fa-edit'></i></a></td>"
			//						+ tdRequest
			//						+ tdQuarantine
			//						+ "</tr>";
			//					$('#example1 tbody').append(rows);
			//				$('#dvload').hide();

			//			});
			//			}
			//			else {
			//				$('#dvload').hide();
			//			}
			//			$("#example1").DataTable({
			//				"paging": true,
			//				"lengthChange": true,
			//				"searching": true,
			//				"ordering": true,
			//				"info": true,
			//				"autoWidth": true,
			//				"responsive": true,
			//				'columnDefs': [{
			//					'targets': [9], /* column index */
			//					'orderable': false, /* true or false */
			//				}]
			//			});

			//		},
			//		error: function (emp) {
			//			$('#dvload').hide();
			//			alert('error');
			//		}
			//	});
			//}

</script>