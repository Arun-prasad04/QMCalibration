 @{
	ViewData["PageTitle"] = "Instrument Create";
}
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<form name="frm" id="instrumentform" enctype="multipart/form-data" method="post"
 action='@Url.Action("InsertInstrument","Instrument")'>
	
	<input type="hidden" name="Id" value="@Model.Id">
	<input type="hidden" name="IsNABL" id="IsNABL" value="@Model.IsNABL">
	<!-- Main content -->
	<section class="content">
		<div class="row">
			<div class="col-12">
				<!-- general form elements disabled -->
				<div class="card card-primary">
					<div class="card-header">
						<div class="row">
							<div class="col-md-6">
								<h3 class="card-title trn">New Instrument</h3>
								<input type="hidden" id="hdnLanguage" value="" />
							</div>
							<div class="col-md-6 text-right">
								<a href='@Url.Action("Index","Instrument")'>
									<input type="button" class="btn btn-sm btn-default trn" value="Instrument List">
								</a>
							</div>
						</div>
					</div>
					@*<fieldset>*@
					<div class="card card-default">
						<div class="card-header">
							<h3 class="card-title trn">Instrument Details</h3>

							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
								<button type="button" class="btn btn-tool" data-card-widget="remove">
									<i class="fas fa-times"></i>
								</button>
							</div>
						</div>
						<!-- /.card-header -->

						<div id="myDivDivContent" class="card-body">
							<div class="row">
								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="required trn">Instrument Name</label>
										<input type="text" id="InstrumentName" name="InstrumentName" value="@Model.InstrumentName"
											   class="form-control trn" placeholder="Instrument Name" alt="Please enter Instrument Name">
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Instrument Serial Number</label>
										<input type="text" id="SlNo" name="SlNo" value="@Model.SlNo" class="form-control trn" placeholder="Instrument Serial Number"
											   alt="Please enter the Serial Number">
									</div>
								</div>
							</div>


							<div class="row">
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Range</label>
										<input  type="text" id="Range" name="Range" value="@Model.Range" class="form-control trn" placeholder="Range" alt="Please enter Range">
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Unit</label>
										<input type="text" alt="Please enter Unit" id="Unit1" name="Unit1" value="@Model.Unit1" class="form-control trn" placeholder="Unit">
									</div>
								</div>
							</div>

							<div class="row">
								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="trn">Least Count</label>
										<input type="text" id="LC" name="LC" value="@Model.LC" class="form-control trn" placeholder="Least Count">
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Unit</label>
										<input type="text" alt="Please enter Unit" id="Unit2" name="Unit2" value="@Model.Unit2" class="form-control trn" placeholder="Unit">
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="trn">Model/Capacity</label>
										<input type="text" id="Capacity" name="Capacity" value="@Model.Capacity" class="form-control"
											   placeholder="">
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Amount in JPY</label>
										<input type="text" alt="Please enter Amount JPY" id="AmountJPY" name="AmountJPY" value="@Model.AmountJPY" class="form-control trn" placeholder="Amount in JPY">
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-sm-6">
									@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")
									{
										<div class="form-group">
											<label class="required trn">User Department</label>
											<select class="form-control" name="UserDept" id="UserDept">
												@*<select class="form-control" name="UserDept11" id="UserDept">
												<option class="trn" value=" ">--Select User Department--</option>
												@foreach (var department in @Model.Departments)
												{
													if (department.Id == Model.UserDept)
													{
														<option value="@department.Id" selected="selected">@department.Name</option>
													}
													else
													{
														<option value="@department.Id">@department.Name</option>
													}
												}*@
											</select>
										</div>
									}									
									@if (@Model.Id != 0 && @HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") != "2")
									{
										<div class="form-group">
											<label class="required trn">User Department</label>
											<input type="text" id="UserDept" name="UserDept" value='@Model.DepartmentName' class="form-control"
												   placeholder="" disabled>
										</div>
									}
									@if ((@Model.Id == null || @Model.Id == 0) &&
											@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") != "2")
									{
										<div class="form-group">
											<label class="required trn">User Department</label>
											@*<input type="text" id="UserDept1" name="UserDept"
												   value='@HttpContextAccessor.HttpContext.Session.GetString("DepartmentName")' class="form-control"
												   placeholder="" disabled>*@
											<select class="form-control" name="UserDept" id="UserDept">
												@*<option class="trn" selected="true" value="">--Select User Department--</option>
												@foreach (var department in @Model.Departments)
												{

													<option value="@department.Id">@department.Name</option>
													if (department.Id == Model.UserDept)
													{
														<option value="@department.Id" selected="selected">@department.Name</option>
													}
													else
													{
														<option value="@department.Id">@department.Name</option>
													}
												}*@
											</select>
										</div>
									}



								</div>

								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="required trn">Make</label>
										<input type="text" id="Make" name="Make" value="@Model.Make" class="form-control trn" placeholder="Make" alt="Please fill this field">
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="trn">Comment</label>
										<input type="text" id="Comment" name="Comment" value="@Model.Comment"
											   class="form-control trn" placeholder="" alt="Please fill this field">
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										@*<label class="required trn">Instrument Id Number</label>*@
										@*<input type="text" id="txtIdNo" name="IdNo" value="@Model.IdNo"
											   class="form-control trn" placeholder="Instrument Id Number" alt="Please fill this field">*@
											   <label class="required trn">Grade</label>
										<input type="text" id="Grade" name="Grade" value="@Model.Grade"
											   class="form-control trn" placeholder="Grade">

									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-sm-6">
									<!-- text input -->
									<div class="form-group">
										<label class="trn">Type of Instrument</label>
										<select id="Instrument_Type" name="Instrument_Type" class="form-control">
											<option value=" " class="trn">--Select Type Of Instrument--</option>
											@if (Model.Instrument_Type == 1)
											{
												<option value="1" selected="true" class="trn">Dial</option>
											}
											else
											{
												<option value="1" class="trn">Dial</option>
											}
											@if (Model.Instrument_Type == 2)
											{
												<option value="2" selected="true" class="trn">Digital</option>
											}
											else
											{
												<option value="2" class="trn">Digital</option>
											}
											@if (Model.Instrument_Type == 3)
											{
												<option value="3" selected="true" class="trn">Analog</option>
											}
											else
											{
												<option value="3" class="trn">Analog</option>
											}
										</select>
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Equipment Station</label>
										<select id="EquipmentStation" name="EquipmentStation" class="form-control">
											<option value=" " class="trn">--Select Equipment Station--</option>
											@if (Model.EquipmentStation == "Inline")
											{
												<option value="Inline" selected="true" class="trn">Inline</option>
											}
											else
											{
												<option value="Inline" class="trn">Inline</option>
											}
											@if (Model.EquipmentStation == "Lab")
											{
												<option value="Lab" selected="true" class="trn">Lab</option>
											}
											else
											{
												<option value="Lab" class="trn">Lab</option>
											}
										</select>
									</div>
								</div>
							</div>
							<div class="row">

								
							</div>
							<div class="row">

								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Scope</label>
										<select id="TypeOfEquipment" name="TypeOfEquipment" class="form-control">
											<option value="" selected="true" class="trn">--Select Type Of Scope--</option>
											@if (Model.TypeOfEquipment == "Internal" || Model.TypeOfEquipment == "内部")
											{
												<option value="Internal" selected="true" class="trn">Internal</option>
											}
											else
											{
												<option value="Internal" class="trn">Internal</option>
											}
											@if (Model.TypeOfEquipment == "External" || Model.TypeOfEquipment == "外部の")
											{
												<option value="External" selected="true" class="trn">External</option>
											}
											else
											{
												<option value="External" class="trn">External</option>
											}
										</select>
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										<label class="required trn">Applicable for Tool Inventory</label>
										<select id="ToolInventory" name="ToolInventory" class="form-control" disabled>
											<option value="" selected="true" class="trn">--Select Tool Inventory--</option>
											@if (Model.ToolInventory == "Yes")
											{
												<option value="Yes" selected="true" class="trn">Yes</option>
											}
											else
											{
												<option value="Yes" class="trn">Yes</option>
											}
											@if (Model.ToolInventory == "No")
											{
												<option value="No" selected="true" class="trn">No</option>
											}
											else
											{
												<option value="No" class="trn">No</option>
											}
										</select>
									</div>
								</div>

							</div>
							<div class="row">
								<div class="col-sm-6">
								<!-- text input -->
								<div class="form-group">
									<label class="trn">Remarks</label>
									<input type="text" id="Remarks" name="Remarks" value="@Model.Remarks" class="form-control trn"
											   placeholder="Remarks">
								</div>
								</div>
								
							</div>
							<div class="row">
								<div class="col-sm-6">
								</div>
								<div class="col-sm-6">
									<div>
										<p id="FileList"></p>
									</div>
								</div>
							</div>
							<div id="imageSection" class="col-md-6">
								@if (@Model.FileList != null)
								{
									foreach (var img in @Model.FileList)
									{
										string[] imgarray = @img.ToString().Split('.');
										if (imgarray[1] == "doc" || imgarray[1] == "docx")
										{
											<img height="25" width="25" src="https://upload.wikimedia.org/wikipedia/commons/f/fb/.docx_icon.svg">

										}
										if (imgarray[1] == "jpg" || imgarray[1] == "jpeg" || imgarray[1] == "PNG")
										{
											<img height="25" width="25"
												 src="https://upload.wikimedia.org/wikipedia/commons/6/6b/Picture_icon_BLACK.svg">

										}
										if (imgarray[1] == "pdf")
										{
											<img height="25" width="25" src="https://upload.wikimedia.org/wikipedia/commons/8/87/PDF_file_icon.svg">

										}
										if (imgarray[1] == "ppt" || imgarray[1] == "pptx")
										{
											<img height="25" width="25"
												 src="https://upload.wikimedia.org/wikipedia/commons/a/a0/.pptx_icon_%282019%29.svg">

										}
										if (imgarray[1] == "xls" || imgarray[1] == "xlsx")
										{
											<img height="25" width="25"
												 src="https://cdn3.iconfinder.com/data/icons/document-icons-2/30/647702-excel-512.png">

										}
										<a href='~/Instrument/@img' target="_blank">@img</a>

										<br />
									}
								}
							</div>
						</div>

						@if (@Model.IdNo != null && @Model.IdNo != "")
						{
							<div id="myDivDivCaliration" class="card card-default">
								<div class="card-header">
									<h3 class="card-title trn">Calibration Details</h3>

									<div class="card-tools">
										<button type="button" class="btn btn-tool" data-card-widget="collapse">
											<i class="fas fa-minus"></i>
										</button>
										<button type="button" class="btn btn-tool" data-card-widget="remove">
											<i class="fas fa-times"></i>
										</button>
									</div>
								</div>
								<!-- /.card-header -->

								<div class="card-body">

									<div class="row" >
										@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2" && (Model.TypeOfEquipment == "Internal" || Model.TypeOfEquipment == "内部"))
										{
											<div class="col-sm-3" >
												<div class="form-group">
													<label class="trn">Master Instrument Name</label>
													<select id="MasterInstrument" name="MasterInstrument" class="form-control" @Model.IsDisabled>
														@*<option>--Select Master--</option>
														@foreach (var master in @Model.MasterData)
														{

															<option value="@master.Id">@master.EquipName</option>
														}
														}*@
													</select>
												</div>
											</div>

											<div class="col-sm-1" style="top: 36px;">
												@*@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")
												{*@
												<input type="button" class="btn-primary" value="Add"
												onclick="AddNewInstrumentMaster(language)">
												@*}*@
											</div>
										}		
										<div class="col-sm-2">
											@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")
											{
												<input type="hidden" id="MasterInstrument1" name="MasterInstrument1"
												value="@Model.MasterInstrument1">
												<input type="hidden" id="MasterInstrument2" name="MasterInstrument2"
												value="@Model.MasterInstrument2">
												<input type="hidden" id="MasterInstrument3" name="MasterInstrument3"
												value="@Model.MasterInstrument3">
												<input type="hidden" id="MasterInstrument4" name="MasterInstrument4"
												value="@Model.MasterInstrument4">

												<div id="masterEquipmentValue">
													@if (Model.MasterEqiupmentList != null && Model.MasterEqiupmentList.Count > 0)
													{
														int i = 1;
														@foreach (var master in Model.MasterEqiupmentList)
														{


															string identifier = "masvalue" + @i;
															<div id='@identifier'>

																@master.EquipName <i class="fas fa-trash"
																onclick="DeleteMasterEqiupment(@i)"></i><br>

															</div>
															;
															i = i + 1;
														}
													}
												</div>
											}
										</div>

										<div class="col-sm-6">
											<!-- text input -->
											<div class="form-group" style="display: none;">
												@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")
												{
												<label class="trn">Instrument Id Number</label>
												
													<input type="text" id="IdNo" name="IdNo" value="@Model.IdNo" class="form-control" placeholder="Instrument Id Number"
													@Model.IsDisabled>
												}
												else
												{
													<input type="text" id="IdNo" name="IdNo" value="@Model.IdNo" class="form-control" placeholder="Instrument Id Number"
														   disabled>
												}
											</div>
										</div>
									</div>
									
									<div class="row">
									
										<div class="col-sm-6">
											<div class="form-group">
												<label class="trn">Calibration Date</label>
												<div class="input-group date" id="reservationdate" data-target-input="nearest">
													@* onchange="$('#CalibDate').attr('value',$('#CalibDate').val());loaddate()">*@
													<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate"
														   id="CalibDate" name="CalibDate" value="@Model.CalibDate" @Model.IsDisabled>
													<div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">
														<div class="input-group-text"><i class="fa fa-calendar"></i></div>
													</div>
												</div>
											</div>
										</div>
											<div class="col-sm-6">
												<div class="form-group">
													<label for="exampleSelectRounded0" class="trn">Calibration Status</label>
													<select id="CalibrationStatus" name="CalibrationStatus" class="form-control" @Model.IsDisabled>
													@*@foreach (var calibrationstatus in @Model.CalibrationStatusList)
													{
														if (calibrationstatus.Id == Model.CalibrationStatus)
														{
																		<option value="@calibrationstatus.Id" selected="selected">
																@calibrationstatus.AttrValue
																		</option>
														}
														else
														{
																		<option value="@calibrationstatus.Id">@calibrationstatus.AttrValue</option>
														}
													}*@

													</select>
												</div>
											</div>
									</div>
									<div class="row">
										
											<div class="col-sm-6">
												<div class="form-group">
													<label class="trn">Due Date</label>
													<div class="input-group date" id="reservationdate1" data-target-input="nearest">
													@*onchange="$('#DueDate').attr('value',$('#DueDate').val());">*@
													@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")@* && (Model.TypeOfEquipment == "Internal" || Model.TypeOfEquipment == "内部"))*@
													{
														@if (@Model.DueDate == null || @Model.DueDate == DateTime.MinValue)
														{
															<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate1"
																   id="DueDate" name="DueDate" value="" />
													}
													else{
															<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate1"
																   id="DueDate" name="DueDate" value="@Model.DueDate.ToShortDateString()" />  
														}
																	
														
													}
													else
													{
														@if (@Model.DueDate == null || @Model.DueDate == DateTime.MinValue)
														{
															<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate1"
																   id="DueDate" name="DueDate" value="" @Model.IsDisabled />
														}
														else
														{
															<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate1"
																   id="DueDate" name="DueDate" value="@Model.DueDate.ToShortDateString()"  @Model.IsDisabled/>
														}
													
														
													}
													<div class="input-group-append" data-target="#reservationdate1" data-toggle="datetimepicker">
															<div class="input-group-text"><i class="fa fa-calendar"></i></div>
														</div>
													</div>
												</div>
											</div>
										

										<div class="col-sm-6">
											<div class="form-group">
												<label class="trn">Date Of Receipt</label>
												<div class="input-group date" id="reservationdate2" data-target-input="nearest"
													 onchange="$('#DateOfReceipt').attr('value',$('#DateOfReceipt').val());">
													<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate2"
														   id="DateOfReceipt" name="DateOfReceipt" value="@Model.DateOfReceipt" @Model.IsDisabled />
													<div class="input-group-append" data-target="#reservationdate2" data-toggle="datetimepicker">
														<div class="input-group-text"><i class="fa fa-calendar"></i></div>
													</div>
												</div>
											</div>
										</div>
									</div>
									
									@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2")@* && (Model.TypeOfEquipment == "Internal" || Model.TypeOfEquipment == "内部"))*@
									{
										<div class="row">
											
											@* <div class="col-sm-6">
												<div class="form-group"> *@
													<div class="col-md-6">
														<div class="form-group">
															<label class="trn">Standard Refered/Calibration Method</label>
													<input id="StandardReffered" name="StandardReffered" class="form-control" style="width: 100%;" value="@Model.StandardReffered">
														</div>
											</div>
												<div class="col-sm-6">
														<div class="form-group">
															<label class="trn">Calibration Frequency</label><br>
													<select class="form-control" name="CalibFreq" id="CalibFreq">
													@*<select id="CalibFreq" name="CalibFreq" class="form-control" value="@Model.CalibFreq" style="width:100%; height:100%; padding:5px">*@
															</select>
														</div>
													</div>
										
										</div>
										
										<div class="row">
											
											<div class="col-sm-6">
												<div class="form-group">
													@*<button type="submit" id="btnSave" onclick="SaveInstrumenDetails()" class="btn btn-primary trn">Save</button>*@
												</div>
											</div>
										</div>
									}
								</div>

							</div>
						}
						@* @if(ViewBag.ShowDetails) { *@
						<div class="card-footer">
							<button type="submit" class="btn btn-primary trn">Submit</button>
								<a href='@Url.Action("Index","Instrument")'>
									<input type="button" class="btn btn-default trn" value="Cancel">
								</a>
						</div>
						@* } *@
						<!-- /.card-body -->
					</div>
					<!-- /.card -->
				</div>
				<!-- /.col -->
			</div>
			<!-- /.row -->
	</section>
	<!-- /.content -->
	@*</fieldset>*@
</form>
<script type="text/javascript" src="~/js/jquery-3.6.0.js"></script>

<script>

		$(function () {

			$('#UserDept').select2();
			$('#UserDept1').select2();
		if ($('#MasterInstrument').length) {   //please add this condition
			$('#MasterInstrument').val().prop("selected", true);
			$('#MasterInstrument').select2();
		}
			@*$('#MasterInstrument').val(@Model.MasterInstrument1).prop("selected", true);
			$('#MasterInstrument').select2();*@
			$('#CalibFreq').val(@Model.CalibFreq);
			
	@*if (JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.CalibFreq))') != null) {
			var CalibFreq = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.CalibFreq))');
			$("#CalibFreq1").select2().val(CalibFreq).trigger("change");

		}*@

			$('#reservationdate1').datetimepicker({
				format: 'DD/MM/YYYY'
			});
			$('#reservationdate2').datetimepicker({
				format: 'DD/MM/YYYY'
			});

			$.validator.addMethod("CalibFreq", function (value, element) {
				if (!$('#CalibFreq').length)
					return true;
				else {
					var check = value != 0 && value != null && value != undefined;
					return check;
				}

			});


			$.validator.addMethod("DueDate", function (value, element) {
				var check = value != 0 && value != null && value != undefined;
				return check;
			});

			$("#TypeOfEquipment").change(function () {
				
				var eq = $('#TypeOfEquipment').val();
		
				console.log(eq);
				if (eq == "External" || eq == "外部の") {
					$('#ToolInventory').val('');
					$('#ToolInventory').prop('disabled', true);
				} else {
					$('#ToolInventory').prop('disabled', false);
				}
			});

			$("#UserDept").change(function () {

				var ud = $('#UserDept').val();
				var defaultVal = ud == "" || ud == null || ud == undefined;
				var span = $("#UserDept").closest('.form-group').find('span:last');

				if (!defaultVal && span.hasClass('invalid-feedback')) {

					$("#UserDept").next(".select2").find(".select2-selection").css('border-color', '#ced4da');
					span.remove();
				}
			});

			$("#UserDept1").change(function () {

				var ud1 = $('#UserDept1').val();
				var defaultVal1 = ud1 == "" || ud1 == null || ud1 == undefined;
				var span1 = $("#UserDept1").closest('.form-group').find('span:last');

				if (!defaultVal1 && span1.hasClass('invalid-feedback')) {

					$("#UserDept1").next(".select2").find(".select2-selection").css('border-color', '#ced4da');
					span1.remove();
				}
			});
@*//$(nfuction () {*@
			$('#instrumentform').validate({
				rules: {
					InstrumentName: {
						required: true,
					},
					SlNo: {
						required: true,
					},
					Range: {
						required: true,
					},
					Unit1: {
						required: true,
					},
					Unit2: {
						required: true,
					},
					Unit3: {
						required: true,
					},
					UserDept: {
						required: true,
					},
					Make: {
						required: true,
					},
					StandardReffered: {
						required: false,
					},
					IdNo: {
						required: true,
					},
					TemplateName: {
						required: true,
					},
					Status: {
						required: true,
					},
					CalibSource: {
						required: false,
					},
					CalibFreq: {
						CalibFreq: true,
	@*//required: true,*@
							},
			TypeOfEquipment: {
			required: true,
		},
			ToolInventory: {
			required: true,
		},
			DueDate: {
			DueDate: true,
		}
						},
		messages: {
		InstrumentName: {
			required: "Please enter Instrument Name",
		},
		SlNo: {
			required: "Please enter the Serial Number",
		},
		Range: {
			required: "Please enter Range",
		},
		Unit1: {
			required: "Please enter Unit",
		},
		Unit2: {
			required: "Please enter Unit",
		},
		Unit3: {
			required: "Please enter Unit",
		},
		UserDept: {
			required: "Please enter the UserDepartment",
		},
		Make: {
			required: "Please Fill This Field",
		},
		StandardReffered: {
			required: "Please Fill This Field",
		},
		IdNo: {
			required: "Please Fill This Field",
		},
		TemplateName: {
			required: "Please Fill This Field",
		},
		Status: {
			required: "Please enter the Status",
		},
		CalibSource: {
			required: " Please provide The Calibration Source",
		},
		CalibFreq: {
			CalibFreq: "Please provide The Calibration Frequency",
	@*//CalibFreq1 required: "Please provide The Calibration Frequency",*@
							},
		TypeOfEquipment: {
		required: "Please Select Scope Of Instrument",
	},
		ToolInventory: {
		required: "Please Select the Tool Inventory",
	},
		DueDate: {
		DueDate: "Please Select the Due Date",
	}
						},


		errorElement: 'span',
		errorPlacement: function (error, element) {
			error.addClass('invalid-feedback');
			element.closest('.form-group').append(error);
		},
		highlight: function (element, errorClass, validClass) {

			if (!$(element).hasClass("select2-hidden-accessible"))
				$(element).addClass('is-invalid');
			else {
				var selectedSpan = $(element).next(".select2").find(".select2-selection");
				selectedSpan.css('border-color', '#dc3545');
			}

		},
		unhighlight: function (element, errorClass, validClass) {
		$(element).removeClass('is-invalid');

		}

			});
				@*//});*@
		});

		setTimeout(function () {

			$('#reservationdate').datetimepicker({
				format: 'DD/MM/YYYY'
			});
			$('#reservationdate1').datetimepicker({
				format: 'DD/MM/YYYY'
			});
			$('#reservationdate2').datetimepicker({
				format: 'DD/MM/YYYY'
			});
			$('#DueDate').datetimepicker({
				format: 'DD/MM/YYYY'
			});
			
		}, 1000);
	@*</script>
		<script>*@

		function getNABLValue(option) {
			document.getElementById("IsNABL").value = option.value;
			//alert(document.getElementById("IsNABL").value);
		}

	function checkFileSize(element, maxSize, event) {
		var val = $(element).val(); //get file value
		var fileSize = ($(element)[0].files[0].size / 1024 / 1024); //size in MB
		if (fileSize > maxSize) {
			AlertPopup("File Size Should Not Exceed More Than 5MB");// if Maxsize from Model > real file size alert this
			$("#ImageUpload").val("");
		}
		var input = document.getElementById('ImageUpload')
		var output = document.getElementById('FileList')
		var result = "";
		for (var i = 0; i < input.files.length; i++) {
			result += input.files.item(i).name + '<br />';
		}
		output.innerHTML = result;

	}
	@*</script>
		<script>*@
		function loaddate() {
			//debugger;
			var date1 = document.getElementById("CalibDate").value;
			var e = document.getElementById("CalibFreq");
			var type = e.options[e.selectedIndex].text;
			var datestr = (date1.split(" ")[0]).split("/");
			var newDate = new Date(datestr[2], datestr[1], datestr[0]);
			if (type == "One Month") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 1));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Two Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 2));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Three Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 3));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Four Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 4));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Five Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 5));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Six Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 6));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Seven Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 7));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Eight Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 8));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Nine Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 9));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Ten Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 10));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "Eleven Months") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth() + 11));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear();
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "1 Year") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth()));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear() + 1;
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "2 Years") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth()));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear() + 2;
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
			if (type == "3 Years") {
				var d = new Date(newDate);
				var newDate = new Date(d.setMonth(d.getMonth()));
				var day = newDate.getDate();
				var month = newDate.getMonth();
				if (month == 0) {
					month = 12
				}
				var year = newDate.getFullYear() + 3;
				var result3 = day + "/" + month + "/" + year;
				document.getElementById("DueDate").value = result3;
			}
		}

function validateFields() {
		alert('test');
		alert(ValidateCheckInstrument());
		if (ValidateCheckInstrument() == 0) {
			alert('ok test');
		}
		else
		{
			showWarning('Please Select Tentative Closing Date, Observation Templates, Standard Refered/Calibration Method, Calibration Frequency Values...!', lang);
		return false;
		}
}
</script>

