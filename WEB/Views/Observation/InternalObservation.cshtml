@using Microsoft.AspNetCore.Http

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<script src="~/js/3.3.1Version/jquery.min.js"></script>
<style>
	table,
	th,
	tr,
	td {
		border: 1px solid black;
		border-collapse: collapse;
		text-align: center;
	}

	.TblContent {
		/* border: 1px solid #CCC; */
		border: 1px solid black;
		border-collapse: collapse;
		text-align: center;
	}

	.TblInHeader {
		border: none;
		border-collapse: collapse;
		text-align: center;
	}

	.Tables-AndTablesTextBox {
		width: 100%;
	}

	.vertical-center {
		margin: 0;
		position: absolute;
		top: 65%;
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
		border: 1px solid black;
		border-collapse: collapse;
	}
</style>
@* <div class="row"> *@
<div class="col-md-12" style="padding: 19px;border: 1px solid black; background-color: white;">


	<table class="Tables-AndTablesTextBox" id="tblHeader">



		@* <tr id="RowHeaderDepth" style="font-weight: bold;" class="sizeborder">
		<td colspan="4">
		@* <span> 観察シート / Observation sheet -</span><span>ディップスマイクロメータ／Depth micrometer</span> *@
		@*<span class="trn">
		@Model.Title
		</span>
		</td>

		</tr> *@

		<tr class="">
			<td class="" rowspan="2" style="font-weight: bolder;color: #2979cb ;width:150px;" height="20">
				<img src="../image/Fuso.png" alt="" style="width: 40%;" />
			</td>

			<td id="tdHeaderDepth" class="" rowspan="2" style="font-weight: bold;font-size: 15px;">
				<span class="trn">
					@Model.Title
				</span>
				@* <span class="trn">ディップスマイクロメータ／Depth micrometer </span> </br> <span class="trn">アナログ／Analog・デジタル／Digital</span> *@
			</td>

			<td class="trn" height="10">
				@Model.FormatNoTitle
			</td>

			<td id="" class="">
				@Model.FormatNo
			</td>
		</tr>
		<tr>
			<td class="" height="20">
				リビジョン番号／Revision No.
			</td>
			<td class="">0</td>
		</tr>
	</table>
	<br>

	<table id="TblInstrument" class="Tables-AndTablesTextBox">
		<tr>
			<td colspan="2" class=""><span>品名コード-社番／</span><br /><span>Instrument ID number</span></td>
			<td colspan="1">@Model.IdNo</td>
			<td colspan="2" class=""><span>品名   ／</span><br /><span>Instrument name</span></td>
			<td colspan="3">@Model.Name</td>
			<td colspan="2" class=""><span>製造者／</span><br /><span> Make</span></td>
			<td colspan="2">@Model.Make</td>
		</tr>
		<tr>
			<td class="" colspan="2">
				<span>製造番号 /Serial Number</span>
			</td>
			<td colspan="1">@Model.SlNo</td>
			<td class="" colspan="2">
				<span>等級   ／</span><br /><span>Grade</span>
			</td>
			<td colspan="3">@Model.Grade</td>
			<td colspan="2" class="">
				<span>能力(測定範囲）／</span><br /> <span>Range</span>
			</td>
			<td colspan="2">@Model.Range</td>
		</tr>
		<tr>
			<td class="" colspan="6">
				<span>基準器・標準器・検査設備機器／</span><br /><span> Standard instruments (Master instrument)</span>
			</td>

			<td class="" colspan="3">
				<span>参照基準／</span><br /><span>Reference standards</span>
			</td>
			<td colspan="3"> @Model.RefStd</td>

		</tr>
		<tr>

			<td colspan="6">
				@* <div id="masterEquipmentValue" class="Tables-AndTablesTextBox"> *@
				@if (Model.MasterEqiupmentList != null && Model.MasterEqiupmentList.Count > 0)
				{
					int i = 1;

					@foreach (var master in Model.MasterEqiupmentList)
					{
						<label>

							@i
							.
							@master.EquipName
							&nbsp;

						</label>

						i = i + 1;
					}
				}
				@* </div> *@
			</td>

			<td class="" colspan="3">
				<span>単位／ Unit</span>
			</td>
			<td colspan="3"><input type="text" style="height: 50px;" value="@Model.Units" class="Tables-AndTablesTextBox" name="Units" id="Units"></td>
		</tr>
		<tr>
			<td colspan="1"><span>検査室温度 °C／ Temperature °C</span></td>
			<td colspan="2"><input type="text" value="@Model.TempStart" id="TempStart" class="Tables-AndTablesTextBox" style="height: 60px;" required="required"></td>
			<td colspan="1"><span>検査室湿度 %RH／ Humidity %RH</span></td>
			<td colspan="2"><input type="text" value="@Model.Humidity" id="Humidity" class="Tables-AndTablesTextBox" style="height: 60px;" required="required"></td>
			<td colspan=2">
				<span>外観・機能／Visual Check</span>
			</td>
			<td colspan="4" style="width:500px;height : 60px; border-collapse: collapse;">
				<textarea name="VisualCheckCondition" id="VisualCheckCondition" class="Tables-AndTablesTextBox" required="required">@Model.Condition</textarea>
			</td>

	</table>
	<br>
	<div class="row">
			@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "2" || @HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "3") @* || @HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "3") && @Model.ReviewStatus == 0) *@
			{
				@if (Model.StatusId != 30)
				{
				<div class="col-md-5">
					<div class="form-group">
						<label class="required trn">Observation Content</label>
						<select style="width:90%" name="ContentSelect" id="ContentSelect" class="form-control muldrop TblContent" multiple="multiple">
								@foreach (var Content in @Model.ObservationContentList)
								{
									if (@Model.UserContentMappingViewModel != null)
									{
										var check = false;
										@foreach (var contentmapid in @Model.UserContentMappingViewModel)
										{
											//if(SubSectionCode.)
											if (Content.Id == contentmapid.ContentId)
											{
												check = true;
											}
										}
										if (check == true)
										{

										<option value="@Content.Id" selected="selected">@Content.ContentName</option>
										}
										else
										{
										<option value="@Content.Id">@Content.ContentName</option>
										}
									}
									else
									{

									<option value="@Content.Id">@Content.ContentName</option>

									}


								}

							}
						</select>

					</div>

				</div>

				<div class="col-md-4">
					<div class="form-group vertical-center">
						<input type="button" id="btnGenerate" value="Generate Table" class="btn-Generate" />
					</div>
				</div>
				}
			}

			@* Dynamic table Div *@
		<div id="dvTable" class="col-md-9 content"></div>
			@* Dynamic table Div *@

	</div>
	<table class="Tables-AndTablesTextBox TblInHeader" id="TblFooter">
		<tr>
			<td class="trn">検査員／Inspector</td>
			<td>
				<input type="text" value="@Model.CalibrationPerformedBy" class="Tables-AndTablesTextBox TblInHeader"
					   id="CalibrationPerformedBy" name="CalibrationPerformedBy" disabled>
			</td>
			<td>検査日／Inspection Date</td>
			@if (true)
			{
				var performDate = @Model.CalibrationPerformedDate.ToString("dd-MM-yyyy");
				<td>
					<input type="text" value="@Model.CalibrationPerformedDate" id="CalibrationPerformedDate" name="CalibrationPerformedDate"
						   class="Tables-AndTablesTextBox TblInHeader" disabled>
				</td>
			}

		</tr>

		<tr>
			<td class="trn">承認者／Approver</td>
			<td><input type="text" value="@Model.CalibrationReviewedBy" class="Tables-AndTablesTextBox TblInHeader" id="ReviewedBy" name="ReviewedBy" disabled></td>

			<td>承認日／Approved Date</td>

			@if (true)
			{
				var ReviewDate = @Model.CalibrationReviewedDate.ToString("dd-MM-yyyy");
				<td>
					<input type="text" name="ReviewDate" id="ReviewDate"
						   value=" @Model.CalibrationReviewedDate" class="Tables-AndTablesTextBox TblInHeader" disabled>
				</td>

			}
		</tr>
			@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "4")@*  && @Model.ReviewStatus == 0) *@
			@*|| @Model.ReviewStatus == 0) @Model.ReviewStatus	 != null *@
			{
			<tr>
				<td class="">判定／Judgement</td>
				<td class="" colspan="3">
					<div style="text-align: left;">

						<label class="trn">合格 / Pass</label>
						<input type="radio" name="Approve" id="Approve" value="">
						<label class="trn">不合格 /Fail</label>
						<input type="radio" name="Reject" id="Reject">
					</div>
				</td>

			</tr>
			}
			@* <textarea name="VisualCheckCondition" id="VisualCheckCondition" style="width: 500px;" class="Tables-AndTablesTextBox" required="required">@Model.Condition</textarea> *@
			@* 	<td colspan="4"><input type="text" value=" " class="Tables-AndTablesTextBox TblInHeader" style="text-align:left;" id="Remarks" name="Remarks"></td> *@
			@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "4")
			{
			<tr id="trRejection" class="trhideRejection">
				<td class="trn">拒否の理由／Reason For Rejection </td>

				<td colspan="4"><textarea value=" " class="Tables-AndTablesTextBox TblInHeader" style="text-align:left;" id="Remarks" name="Remarks"></textarea></td>
			</tr>
			}
			@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") != "4")
			{
			<tr>
				<td colspan="4">
						@* @if (@Model.ReviewStatus == null || @Model.ReviewStatus == 0)
				{ *@

						@if (Model.StatusId == 27 )//|| Model.StatusId == 29)
						{
						<input type="button" class="btn btn-primary trn btnSaveApproval" value="Save" name="Save" id="btnSaveApproval">  @* onclick="SaveMicrometer(language)" *@
						}
					<a class="btn btn-primary trn TblInHeader" href='@Url.Action("Request","Tracker",new {reqType=4})'>Cancel</a>
				</td>
			</tr>
			}
			@if (@HttpContextAccessor.HttpContext.Session.GetString("UserRoleId") == "4")
			{
			<tr>
				<td colspan="3" style="text-align:center;">
						@* @if (@Model.ReviewStatus == null || @Model.ReviewStatus == 0)
				{  *@

					<input type="button" class="btn btn-primary trn btnSaveReview" value="Submit Review" name="btnSaveReview" id="btnSaveReview" onclick="SubmitReview(language)">

						@*  } *@
					<a class="btn btn-primary trn" href='@Url.Action("Request","Tracker",new {reqType=4})'>Cancel</a>
				</td>
			</tr>
			}
	</table>
	 
		<input type="hidden" id="ReviewStatus" name="ReviewStatus" value="@Model.ReviewStatus">
	<input type="hidden" id="InstrumentId" name="InstrumentId" value="@Model.Id">
	<input type="hidden" id="RequestId" name="RequestId" value="@Model.RequestId">
	<input type="hidden" id="TemplateObservationId" name="TemplateObservationId" value="@Model.TemplateObservationId">
	<input type="hidden" id="InsCalibFreq" name="InsCalibFreq" value="@Model.CalibFreq">
	
	<input type="hidden" id="istemplate" name="istemplate" value="@Model.istemplate">
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>


<script type="text/javascript">
	

	var tableIN = "";
	var tableCW = "";
	var tableSW = "";

	var tbllengthcount;
	
	var tbLINContentId;
	var tbLINSNo;

	var tbLCWContentId;
	var tbLCWSNo;

	var tbLSWContentId;
	var tbLSWSNo;
	
	$(document).on('keyup', '.MeasuedValue , .Actual', function () {

		var Actual = $(this).closest('tr').find('.Actual').val();
		var MeasuedValue = $(this).closest('tr').find('.MeasuedValue').val();
		console.log(Actual);
		Actual = isNaN(Actual) || !Actual.trim() || null ? 0 : parseFloat(Actual);
		MeasuedValue = isNaN(MeasuedValue) || !MeasuedValue.trim() || null ? 0 : parseFloat(MeasuedValue);

		var subtotal = Actual - MeasuedValue;

		$(this).closest('tr').find('.Avg').val(parseFloat(subtotal).toFixed(3));

	});

	//for Torque Wrench
	$(document).on('keyup', '.MeasuedValueCW, .Value1, .Value2, .Value3, .Average, .Percentage', function () {

		var Value1 = $(this).closest('tr').find('.Value1').val();
		var Value2 = $(this).closest('tr').find('.Value2').val();
		var Value3 = $(this).closest('tr').find('.Value3').val();
		console.log(Value1);
		console.log(Value2);
		console.log(Value3);
		var MeasuedValueCW = $(this).closest('tr').find('.MeasuedValueCW').val();
		Value1 = isNaN(Value1) || !Value1.trim() || null ? 0 : parseFloat(Value1);
		Value2 = isNaN(Value2) || !Value2.trim() || null ? 0 : parseFloat(Value2);
		Value3 = isNaN(Value3) || !Value3.trim() || null ? 0 : parseFloat(Value3);
		MeasuedValueCW = isNaN(MeasuedValueCW) || !MeasuedValueCW.trim() || null ? 0 : parseFloat(MeasuedValueCW);
		var Average = (Value1 + Value2 + Value3) / 3;
		var Percentage =((Average - MeasuedValueCW) / MeasuedValueCW) * 100;
		$(this).closest('tr').find('.Average').val(Average.toFixed(3));
		$(this).closest('tr').find('.Percentage').val(Percentage.toFixed(3));

	});

	$(function () {
		$('.trhideRejection').hide();
		//if ($('#TemplateObservationId').val() > 0) {
		if ($('#istemplate').val() > 0) {
			//alert($('#istemplate').val());
			$("#dvTable").html("");
			var UserRole = @Json.Serialize(@ViewBag.UserRoleId);
			BindInternalObservationTable(UserRole);
		}
		$('#ContentSelect').multiselect({
			//console.log("multiselect");
			allSelectedText: 'All',
			maxHeight: 200,
			width: "100%",
			buttonWidth: '100%',
			inheritClass: true,
			enableFiltering: true,
			// buttonContainer: '<div class="btn-group me-2" style="border:ridge;"/>',
			includeSelectAllOption: true,
			templates: {
				filter: '<li class="multiselect-item multiselect-filter"><div class="input-group mb-3"><div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-search"></i></span></div><input class="form-control multiselect-search" type="text" /></div></li>',
				filterClearBtn: '<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="fa fa-times-circle"></i></button></span>'

			},

			buttonText: function (options, select) {
				if (options.length == 0) {
					return 'Select all';
				}
				else {
					var selected = '';

					options.each(function () {
						selected += $(this).text() + ', ';
					});

					return selected.substr(0, selected.length - 2);
				}
			}
		});

		$('#Approve').on('change', function () {

			if ($('#Approve').not(this).prop('checked', false)) {
				$('#Reject').prop('checked', false);
				$('#ReviewStatus').val(1);
				$('.trhideRejection').hide();
				$('#Remarks').val(" ");
			}
		});

		$('#Reject').on('change', function () {
			if ($('#Reject').not(this).prop('checked', false)) {
				$('#Approve').prop('checked', false);
				$('#ReviewStatus').val(2);
				// for instrument rejection reason
				$('.trhideRejection').show();
			}

		});

		var reviewStatus = $('#ReviewStatus').val();
		if (reviewStatus == 1) {
			$('#Approve').prop('checked', true);
			$('#Reject').prop('checked', false);
		}
		else if (reviewStatus == 2) {
			$('#Approve').prop('checked', false);
			$('#Reject').prop('checked', true);
		}

		$('.btn-Generate').on('click', function () {
			GenerateInternalObservationContent();
		});
		$('.btnSaveApproval').on('click', function () {
			SaveInternalObservation();
		});

		// $('.addSW').on('click', function () {
		// 	addSW();
		// });
		// $('.addCW').on('click', function () {
		// 	addCW();
		// });
		// $('.addIN').on('click', function () {
		// 	alert("IN");
		// 	addIN();
		// });

	});
	// $(document).on('click', '.btn-Generate', (e) => {
	// 	GenerateInternalObservationContent();
	// });
	// $(document).on('click', '.btnSaveApproval', (e) => {
	// 	SaveInternalObservation();
	// });
	$(document).on('click', '.addSW', (e) => {
		addSW();
	});
	$(document).on('click', '.addCW', (e) => {
		addCW();
	});
	$(document).on('click', '.addIN', (e) => {
		addIN();
	 });
	
	
</script>

